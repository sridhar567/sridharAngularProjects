{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/addnewuser/addnewuser.component.ts","./src/app/addnewuser/addnewuser.component.html","./src/app/app-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authenticationGaurd.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/employeesData/employeesData.component.ts","./src/app/employeesData/employeesData.component.html","./src/app/firebase.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-addnewuser',\n  templateUrl: './addnewuser.component.html',\n  styleUrls: ['./addnewuser.component.css']\n})\nexport class AddnewuserComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AddnewuserComponent>) { }\n\n  userRegisterForm = new FormGroup({\n    name : new FormControl('', [ Validators.required]),\n    phoneNumber : new FormControl('', [ Validators.required]),\n    role : new FormControl('', [ Validators.required]),\n    address : new FormControl('', [ Validators.required]),\n    mail : new FormControl('', []),\n  });\n\n  ngOnInit() {\n  }\n\n  validateRegisterUser() {\n    if (this.userRegisterForm.valid) {\n      this.dialogRef.close(this.userRegisterForm.value);\n    }\n  }\n\n}\n","<div class=\"newUserFormCon\" fxLayout=\"column\">\n\n\n  <form fxLayout=\"column\" [formGroup]=\"userRegisterForm\" (ngSubmit)=\"validateRegisterUser()\">\n    <mat-form-field>\n      <mat-label>* Name</mat-label>\n      <input matInput type=\"text\" formControlName=\"name\" autocomplete=\"off\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>* Phone Number</mat-label>\n      <input matInput type=\"text\" pattern=\"[5-9]{1}[0-9]{9}\" formControlName=\"phoneNumber\" autocomplete=\"off\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>* Role</mat-label>\n      <input matInput type=\"text\" formControlName=\"role\" autocomplete=\"off\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>* Address</mat-label>\n      <input matInput type=\"text\" minlength=\"5\" formControlName=\"address\" autocomplete=\"off\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Email</mat-label>\n      <input matInput type=\"text\" formControlName=\"mail\" autocomplete=\"off\">\n    </mat-form-field>\n    \n    <button type=\"submit\" mat-raised-button>Register</button>\n\n  </form>\n\n  \n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatListModule} from '@angular/material/list';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDialogModule} from '@angular/material/dialog';\n@NgModule({\n  imports: [\n    MatInputModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatExpansionModule,\n    MatListModule,\n    MatDividerModule,\n    MatTableModule,\n    MatDialogModule\n  ],\n\n  exports: [MatInputModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatExpansionModule,\n    MatListModule,\n    MatDividerModule,\n    MatTableModule,\n    MatDialogModule\n]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthenticationGaurdService } from './authenticationGaurd.service';\nimport { EmployeesDataComponent } from './employeesData/employeesData.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate : [AuthenticationGaurdService] , children: [\n    {path: 'employees', component: EmployeesDataComponent},\n    {path: '', redirectTo: 'employees', pathMatch: 'full'}\n  ] },\n  {path: '' , redirectTo: 'dashboard/employees' , pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'angular9Project';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { MaterialModule } from './app-material.module';\nimport { LoginComponent } from './login/login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout' ;\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FirebaseService } from './firebase.service';\nimport { EmployeesDataComponent } from './employeesData/employeesData.component';\nimport { AddnewuserComponent } from './addnewuser/addnewuser.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      LoginComponent,\n      DashboardComponent,\n      EmployeesDataComponent,\n      AddnewuserComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      BrowserModule,\n      BrowserAnimationsModule,\n      FormsModule,\n      AngularFireModule.initializeApp(environment.firebase),\n      AngularFireDatabaseModule,\n      MaterialModule,\n      FlexLayoutModule,\n      ReactiveFormsModule,\n      AngularFirestoreModule\n   ],\n   providers: [\n      FirebaseService\n   ],\n   bootstrap: [\n      AppComponent\n   ],\n   exports: [\n      MaterialModule\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {CanActivate} from '@angular/router';\nimport { FirebaseService } from './firebase.service';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGaurdService implements CanActivate {\n\nconstructor( public fireService: FirebaseService, public router: Router) { }\ncanActivate(): Promise<boolean> {\n  console.log('Authentication checked..');\n  return new Promise((resolve) => {\n  if (localStorage.loginUserMailId && localStorage.loginUserMailId !== '') {\n    const info = {\n      mail : localStorage.loginUserMailId\n    };\n    this.fireService.registerNewUser(info).then( function(status) {\n      if (status === 'User Already Exists') {\n        resolve(true);\n      } else {\n        this.router.navigate(['login']);\n        resolve(false);\n      }\n    });\n\n  } else {\n    this.router.navigate(['login']);\n    resolve(false);\n  }\n});\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from '../firebase.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\n\nexport class DashboardComponent implements OnInit {\n  displaySidenav = true;\n  constructor(public fireService: FirebaseService, public route: Router) { }\n\n  public categories = ['Personal Data', 'Employees Data', 'Collections'];\n\n  ngOnInit() {\n\n  }\n\nlogout() {\n  localStorage.clear();\n  this.route.navigate(['/login']);\n}\n\naddNew() {\n\n}\n\n}\n","<div class=\"dashboardContainer\" fxLayout=\"column\">\n\n  <mat-card class=\"dashboardHeader\" fxLayout=\"row\" >\n    <div class=\"headerLeftCon\" fxFlex=\"20\" fxLayout=\"row\">\n      <div class=\"headerIconCon\" (click)=\"displaySidenav = !displaySidenav\" fxLayoutAlign=\"center center\">\n \n          <mat-icon aria-hidden=\"false\" *ngIf=\"!displaySidenav\" aria-label=\"Example home icon\">arrow_right_alt</mat-icon>\n          <mat-icon aria-hidden=\"false\" *ngIf=\"displaySidenav\" aria-label=\"Example home icon\">keyboard_backspace</mat-icon>\n  \n      </div>\n    </div>\n    <div class=\"headerCenterCon\" fxFlex=\"60\" fxLayoutAlign=\"center center\">\n      <span>App Name</span>\n    </div>\n    <div class=\"headerRightCon\" fxFlex=\"20\">\n      <div class=\"logoutContainer\" fxLayoutAlign=\"center center\">\n        <mat-icon aria-hidden=\"false\" (click)=\"logout()\" aria-label=\"Example home icon\">power_settings_new</mat-icon>\n      </div>\n    </div>\n  </mat-card>\n\n  <div class=\"dashboardContentCon\" fxLayout=\"row\">\n\n  <div class=\"sidenavContainer\" [ngClass]=\"(displaySidenav) ? 'showSidenav':'hideSidenav'\" >\n<div *ngIf=\"displaySidenav\" class=\"sidenavHiddenCon\" fxLayout=\"column\">\n\n  <div class=\"sidenavTopCon\" fxLayoutAlign=\"center center\">\n    <mat-card class=\"userSidenavImageCon\" >\n      <img src=\"https://www.impactconclave.in/uploads/participant/app/1504011911user.png\">\n    </mat-card>\n  </div>\n\n  <div class=\"sidenavUserOptionsCon\">\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let category of categories; let ind = index\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n           {{category}}\n          </mat-panel-title>       \n        </mat-expansion-panel-header>\n    \n        <div class=\"userInformationCon\" fxLayout=\"column\" *ngIf=\"ind == 0\">\n          <span>{{fireService.currentUser?.name}}</span>\n          <span>{{fireService.currentUser?.mobile}}</span>\n          <span>{{fireService.currentUser?.mail}}</span>\n        </div>\n\n        <mat-list role=\"list\" *ngIf=\"ind != 0\">\n          <mat-list-item class=\"subOptionsList\" role=\"listitem\" fxLayout=\"row\">\n            <mat-icon aria-hidden=\"false\" fxFlex=\"10\" fxLayoutAlign=\"center start\" aria-label=\"Example home icon\">arrow_right_alt</mat-icon> \n             <span fxFlex=\"90\" (click)=\"addNew()\" fxLayoutAlign=\"center center\">Add New</span>\n          </mat-list-item>\n          \n          <mat-list-item class=\"subOptionsList\" role=\"listitem\"  fxLayout=\"row\">\n            <mat-icon aria-hidden=\"false\" fxFlex=\"10\" fxLayoutAlign=\"center start\" aria-label=\"Example home icon\">arrow_right_alt</mat-icon> \n            <span fxFlex=\"90\" fxLayoutAlign=\"center center\">Manage</span></mat-list-item>\n        </mat-list>\n     \n      </mat-expansion-panel>\n\n      </mat-accordion>\n  </div>\n\n</div>\n   \n  </div>\n   <div class=\"dashBoardMianContentCon\" [ngClass]=\"(displaySidenav) ? 'contentMiniWidth':'contentMaxWidth'\">\n    <router-outlet></router-outlet>\n   </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FirebaseService } from '../firebase.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { AddnewuserComponent } from '../addnewuser/addnewuser.component';\n@Component({\n  selector: 'app-employeesData',\n  templateUrl: './employeesData.component.html',\n  styleUrls: ['./employeesData.component.css']\n})\n\n\n\nexport class EmployeesDataComponent implements OnInit {\n\n\n  constructor(public firebaseService: FirebaseService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n\n  }\n\n  addNewUser() {\n    const dialogRef = this.dialog.open(AddnewuserComponent, {\n      width: '350px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result) {\n        this.firebaseService.addNewEmployee(result);\n      }\n\n    });\n  }\n\n\n}\n\n","<div class=\"employeesCon\" fxLayout=\"column\">\n\n  <div class=\"employeesHeader\" fxLayoutAlign=\"center center\">    \n    <mat-card fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <span>All Employees</span>\n    </mat-card>\n  </div>\n\n  <div class=\"addNewEmployeeButtonCon\" fxLayoutAlign=\"center center\">\n    <mat-card fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <button mat-mini-fab color=\"primary\" (click)=\"addNewUser()\" fxLayoutAlign=\"center center\"><i class=\"material-icons\">\n        add\n        </i></button>\n    </mat-card>\n  </div>\n\n  <div class=\"employeesTableCon\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <div>\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let user of firebaseService.currentUser?.employees; let ind = index\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{user.name}}\n          </mat-panel-title>\n          <mat-panel-description>\n            {{user.phoneNumber}}\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n\n        <div class=\"userBriefInfoCon\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <span >{{user.Name}}</span>\n          <span>{{user.phoneNumber}}</span>\n          <span>{{user.role}}</span>\n          <span>{{user.address}}</span>\n          <span>{{user.mail}}</span>\n        </div>\n\n      </mat-expansion-panel>\n\n      \n    </mat-accordion>\n    </div>\n\n    \n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  allFirebaseusers: any = [];\n  currentUser: any;\n  constructor(public database: AngularFireDatabase, public firestore: AngularFirestore, public route: Router) {\n\n    const self = this;\n    window.addEventListener('storage', (event) => {\n      console.log('event called...');\n      if (event.storageArea === localStorage) {\n        console.log('localStorage called...');\n        const mail = localStorage.getItem('loginUserMailId');\n        if (mail === undefined || mail === null) {\n          console.log('logout called...');\n          self.route.navigate(['/login']);\n        } else {\n          console.log('dashboard called');\n          self.route.navigate(['/dashboard']);\n        }\n      }\n    }, false);\n\n  }\n\n\n  validateLoginUser(mailId, password) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      this.firestore.collection('/allUsers').doc(mailId).get().subscribe((res) => {\n        if (res && res.data()) {\n          if (password === res.data().password) {\n            self.currentUser = res.data();\n            resolve('success');\n          } else {\n            resolve('Invalid Password');\n          }\n        } else {\n          resolve('user is not registered');\n        }\n      });\n\n    });\n  }\n\n  registerNewUser(data) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      this.firestore.collection('/allUsers').doc(data.mail).get().subscribe((res) => {\n        if (res && res.data()) {\n          self.currentUser = res.data();\n          resolve('User Already Exists');\n\n        } else {\n          this.firestore.collection('allUsers').doc(data.mail).set(data);\n          self.currentUser = data;\n          resolve('success');\n        }\n      });\n    });\n\n  }\n\n  addNewEmployee(data) {\n    const self = this;\n    this.firestore.collection('/allUsers').doc(this.currentUser.mail).get().subscribe((res) => {\n      if (res && res.data()) {\n        const newUser = res.data();\n\n        if (newUser.employees) {\n          newUser.employees.push(data);\n        } else {\n          newUser.employees = [];\n          newUser.employees.push(data);\n        }\n\n        self.currentUser = newUser;\n        self.firestore.collection('/allUsers').doc(self.currentUser.mail).set(newUser);\n      }\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from '../firebase.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public displayLoginContainer = true;\n  constructor(public snackbar: MatSnackBar, public router: Router, public firebaseService: FirebaseService) { }\n\n  Login = new FormGroup({\n    email: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required])\n  });\n\n  Register = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    mobile: new FormControl('', [Validators.required]),\n    mail: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6),\n    Validators.maxLength(8)]),\n    cpassword: new FormControl('', [Validators.required, Validators.minLength(6),\n    Validators.maxLength(8)])\n  });\n\n  ngOnInit() {\n  }\n\n  validateUser() {\n    const self = this;\n    if (this.Login.valid) {\n      this.firebaseService.validateLoginUser(this.Login.value.email, this.Login.value.password).then((status) => {\n        if (status === 'success') {\n          localStorage.loginUserMailId = self.Login.value.email;\n          self.router.navigate(['/dashboard']);\n        } else {\n          self.openSnackBar(status);\n        }\n      });\n    }\n  }\n\n  validateRegister() {\n    const self = this;\n    if (this.Register.valid && this.Register.value.password !== this.Register.value.cpassword) {\n      this.openSnackBar('password & confirm password shoulb be same..');\n      return;\n    }\n\n    if (this.Register.valid) {\n     this.firebaseService.registerNewUser(this.Register.value).then( (status) => {\n      if (status === 'success' ) {\n        localStorage.loginUserMailId = self.Register.value.mail;\n        self.router.navigate(['/dashboard']);\n       } else {\n        self.openSnackBar(status);\n       }\n     });\n    }\n\n  }\n\n  openSnackBar(message) {\n    this.snackbar.open(message, '', {\n      duration: 2000,\n    });\n  }\n\n}\n","<div class=\"loginContainer\" fxLayoutAlign=\"center center\">\n\n  <div class=\"cardOuterCon fadeIn\" *ngIf=\"displayLoginContainer\">\n  <mat-card class=\"loginCardContainer\" fxLayout=\"column\" >\n    <mat-card-header fxFlex=\"15\" fxLayoutAlign=\"center center\">\n      <mat-card-title class=\"commonFontSize\">App Name</mat-card-title>\n    </mat-card-header>\n    <mat-card-content fxFlex=\"70\" class=\"loginFieldsContainer\">\n\n      <form [formGroup]=\"Login\" (ngSubmit)=\"validateUser()\" fxLayout=\"column\" class=\"loginFormContainer\">\n\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input matInput type=\"text\" formControlName=\"email\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-card-title fxLayoutAlign=\"center center\" class=\"commonFontSize LoginButton\"><button mat-raised-button>Login</button></mat-card-title>\n\n      </form>\n\n    </mat-card-content>\n    <mat-card-actions fxFlex=\"15\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <span class=\"registerButton\" (click)=\"displayLoginContainer = !displayLoginContainer\">Register</span>\n    </mat-card-actions>\n  </mat-card>\n</div>\n<div class=\"cardOuterCon fadeIn\"  *ngIf=\"!displayLoginContainer\">\n  <mat-card class=\"registerContainer fadeIn\" fxLayout=\"column\">\n    <mat-card-header fxFlex=\"10\" fxLayoutAlign=\"center center\">\n      <mat-card-title class=\"commonFontSize\">App Name</mat-card-title>\n    </mat-card-header>\n    <mat-card-content fxFlex=\"90\" class=\"registerFieldsContainer\">\n\n      <form [formGroup]=\"Register\" (ngSubmit)=\"validateRegister()\" fxLayout=\"column\" class=\"loginFormContainer\">\n\n        <mat-form-field>\n          <mat-label>* Name</mat-label>\n          <input matInput type=\"text\" formControlName=\"name\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>* Phone Number</mat-label>\n          <input matInput type=\"text\" formControlName=\"mobile\" autocomplete=\"off\" pattern=\"[5-9]{1}[0-9]{9}\">\n        </mat-form-field> \n\n        <mat-form-field>\n          <mat-label>* Email</mat-label>\n          <input matInput type=\"text\" formControlName=\"mail\" autocomplete=\"off\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>* Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>* Confirm Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"cpassword\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-card-title fxLayoutAlign=\"center center\" class=\"commonFontSize LoginButton\"><button mat-raised-button>Register</button></mat-card-title>\n\n      </form>\n\n    </mat-card-content>\n\n    <mat-card-actions fxFlex=\"10\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <span class=\"registerButton\" (click)=\"displayLoginContainer = !displayLoginContainer\">Login</span>\n    </mat-card-actions>\n  </mat-card>\n</div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyBYm1qdVkGPAq34d7u2YziJgwy7g9FaPjE\",\n    authDomain: \"sridhar-calculations.firebaseapp.com\",\n    databaseURL: \"https://sridhar-calculations.firebaseio.com\",\n    projectId: \"sridhar-calculations\",\n    storageBucket: \"sridhar-calculations.appspot.com\",\n    messagingSenderId: \"79388774150\",\n    appId: \"1:79388774150:web:d2009b92d5d052c8f75887\",\n    measurementId: \"G-5BSZW52FEQ\"\n  }\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}