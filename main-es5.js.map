{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/addnewuser/addnewuser.component.ts","webpack:///src/app/addnewuser/addnewuser.component.html","webpack:///src/app/app-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authenticationGaurd.service.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/employeesData/employeesData.component.ts","webpack:///src/app/employeesData/employeesData.component.html","webpack:///src/app/firebase.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddnewuserComponent","dialogRef","userRegisterForm","name","required","phoneNumber","role","address","mail","valid","close","value","validateRegisterUser","selector","templateUrl","styleUrls","MaterialModule","imports","routes","path","component","canActivate","children","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","title","AppModule","initializeApp","firebase","declarations","providers","bootstrap","AuthenticationGaurdService","fireService","router","console","log","localStorage","loginUserMailId","info","registerNewUser","status","navigate","providedIn","DashboardComponent","route","displaySidenav","categories","clear","logout","EmployeesDataComponent","firebaseService","dialog","open","width","afterClosed","subscribe","result","addNewEmployee","addNewUser","FirebaseService","database","firestore","allFirebaseusers","self","window","addEventListener","event","storageArea","getItem","undefined","mailId","password","reject","collection","doc","get","res","data","currentUser","set","newUser","employees","push","LoginComponent","snackbar","displayLoginContainer","Login","email","Register","mobile","minLength","maxLength","cpassword","validateLoginUser","openSnackBar","message","duration","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-addnewuser',\n  templateUrl: './addnewuser.component.html',\n  styleUrls: ['./addnewuser.component.css']\n})\nexport class AddnewuserComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AddnewuserComponent>) { }\n\n  userRegisterForm = new FormGroup({\n    name : new FormControl('', [ Validators.required]),\n    phoneNumber : new FormControl('', [ Validators.required]),\n    role : new FormControl('', [ Validators.required]),\n    address : new FormControl('', [ Validators.required]),\n    mail : new FormControl('', []),\n  });\n\n  ngOnInit() {\n  }\n\n  validateRegisterUser() {\n    if (this.userRegisterForm.valid) {\n      this.dialogRef.close(this.userRegisterForm.value);\n    }\n  }\n\n}\n","<div class=\"newUserFormCon\" fxLayout=\"column\">\n\n\n  <form fxLayout=\"column\" [formGroup]=\"userRegisterForm\" (ngSubmit)=\"validateRegisterUser()\">\n    <mat-form-field>\n      <mat-label>* Name</mat-label>\n      <input matInput type=\"text\" formControlName=\"name\" autocomplete=\"off\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>* Phone Number</mat-label>\n      <input matInput type=\"text\" pattern=\"[5-9]{1}[0-9]{9}\" formControlName=\"phoneNumber\" autocomplete=\"off\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>* Role</mat-label>\n      <input matInput type=\"text\" formControlName=\"role\" autocomplete=\"off\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>* Address</mat-label>\n      <input matInput type=\"text\" minlength=\"5\" formControlName=\"address\" autocomplete=\"off\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Email</mat-label>\n      <input matInput type=\"text\" formControlName=\"mail\" autocomplete=\"off\">\n    </mat-form-field>\n    \n    <button type=\"submit\" mat-raised-button>Register</button>\n\n  </form>\n\n  \n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatListModule} from '@angular/material/list';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDialogModule} from '@angular/material/dialog';\n@NgModule({\n  imports: [\n    MatInputModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatExpansionModule,\n    MatListModule,\n    MatDividerModule,\n    MatTableModule,\n    MatDialogModule\n  ],\n\n  exports: [MatInputModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatExpansionModule,\n    MatListModule,\n    MatDividerModule,\n    MatTableModule,\n    MatDialogModule\n]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthenticationGaurdService } from './authenticationGaurd.service';\nimport { EmployeesDataComponent } from './employeesData/employeesData.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate : [AuthenticationGaurdService] , children: [\n    {path: 'employees', component: EmployeesDataComponent},\n    {path: '', redirectTo: 'employees', pathMatch: 'full'}\n  ] },\n  {path: '' , redirectTo: 'dashboard/employees' , pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'angular9Project';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { MaterialModule } from './app-material.module';\nimport { LoginComponent } from './login/login.component';\nimport { FlexLayoutModule } from '@angular/flex-layout' ;\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FirebaseService } from './firebase.service';\nimport { EmployeesDataComponent } from './employeesData/employeesData.component';\nimport { AddnewuserComponent } from './addnewuser/addnewuser.component';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      LoginComponent,\n      DashboardComponent,\n      EmployeesDataComponent,\n      AddnewuserComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      BrowserModule,\n      BrowserAnimationsModule,\n      FormsModule,\n      AngularFireModule.initializeApp(environment.firebase),\n      AngularFireDatabaseModule,\n      MaterialModule,\n      FlexLayoutModule,\n      ReactiveFormsModule,\n      AngularFirestoreModule\n   ],\n   providers: [\n      FirebaseService\n   ],\n   bootstrap: [\n      AppComponent\n   ],\n   exports: [\n      MaterialModule\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {CanActivate} from '@angular/router';\nimport { FirebaseService } from './firebase.service';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGaurdService implements CanActivate {\n\nconstructor( public fireService: FirebaseService, public router: Router) { }\ncanActivate(): Promise<boolean> {\n  console.log('Authentication checked..');\n  return new Promise((resolve) => {\n  if (localStorage.loginUserMailId && localStorage.loginUserMailId !== '') {\n    const info = {\n      mail : localStorage.loginUserMailId\n    };\n    this.fireService.registerNewUser(info).then( function(status) {\n      if (status === 'User Already Exists') {\n        resolve(true);\n      } else {\n        this.router.navigate(['login']);\n        resolve(false);\n      }\n    });\n\n  } else {\n    this.router.navigate(['login']);\n    resolve(false);\n  }\n});\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from '../firebase.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\n\nexport class DashboardComponent implements OnInit {\n  displaySidenav = true;\n  constructor(public fireService: FirebaseService, public route: Router) { }\n\n  public categories = ['Personal Data', 'Employees Data', 'Collections'];\n\n  ngOnInit() {\n\n  }\n\nlogout() {\n  localStorage.clear();\n  this.route.navigate(['/login']);\n}\n\naddNew() {\n\n}\n\n}\n","<div class=\"dashboardContainer\" fxLayout=\"column\">\n\n  <mat-card class=\"dashboardHeader\" fxLayout=\"row\" >\n    <div class=\"headerLeftCon\" fxFlex=\"20\" fxLayout=\"row\">\n      <div class=\"headerIconCon\" (click)=\"displaySidenav = !displaySidenav\" fxLayoutAlign=\"center center\">\n \n          <mat-icon aria-hidden=\"false\" *ngIf=\"!displaySidenav\" aria-label=\"Example home icon\">arrow_right_alt</mat-icon>\n          <mat-icon aria-hidden=\"false\" *ngIf=\"displaySidenav\" aria-label=\"Example home icon\">keyboard_backspace</mat-icon>\n  \n      </div>\n    </div>\n    <div class=\"headerCenterCon\" fxFlex=\"60\" fxLayoutAlign=\"center center\">\n      <span>App Name</span>\n    </div>\n    <div class=\"headerRightCon\" fxFlex=\"20\">\n      <div class=\"logoutContainer\" fxLayoutAlign=\"center center\">\n        <mat-icon aria-hidden=\"false\" (click)=\"logout()\" aria-label=\"Example home icon\">power_settings_new</mat-icon>\n      </div>\n    </div>\n  </mat-card>\n\n  <div class=\"dashboardContentCon\" fxLayout=\"row\">\n\n  <div class=\"sidenavContainer\" [ngClass]=\"(displaySidenav) ? 'showSidenav':'hideSidenav'\" >\n<div *ngIf=\"displaySidenav\" class=\"sidenavHiddenCon\" fxLayout=\"column\">\n\n  <div class=\"sidenavTopCon\" fxLayoutAlign=\"center center\">\n    <mat-card class=\"userSidenavImageCon\" >\n      <img src=\"https://www.impactconclave.in/uploads/participant/app/1504011911user.png\">\n    </mat-card>\n  </div>\n\n  <div class=\"sidenavUserOptionsCon\">\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let category of categories; let ind = index\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n           {{category}}\n          </mat-panel-title>       \n        </mat-expansion-panel-header>\n    \n        <div class=\"userInformationCon\" fxLayout=\"column\" *ngIf=\"ind == 0\">\n          <span>{{fireService.currentUser?.name}}</span>\n          <span>{{fireService.currentUser?.mobile}}</span>\n          <span>{{fireService.currentUser?.mail}}</span>\n        </div>\n\n        <mat-list role=\"list\" *ngIf=\"ind != 0\">\n          <mat-list-item class=\"subOptionsList\" role=\"listitem\" fxLayout=\"row\">\n            <mat-icon aria-hidden=\"false\" fxFlex=\"10\" fxLayoutAlign=\"center start\" aria-label=\"Example home icon\">arrow_right_alt</mat-icon> \n             <span fxFlex=\"90\" (click)=\"addNew()\" fxLayoutAlign=\"center center\">Add New</span>\n          </mat-list-item>\n          \n          <mat-list-item class=\"subOptionsList\" role=\"listitem\"  fxLayout=\"row\">\n            <mat-icon aria-hidden=\"false\" fxFlex=\"10\" fxLayoutAlign=\"center start\" aria-label=\"Example home icon\">arrow_right_alt</mat-icon> \n            <span fxFlex=\"90\" fxLayoutAlign=\"center center\">Manage</span></mat-list-item>\n        </mat-list>\n     \n      </mat-expansion-panel>\n\n      </mat-accordion>\n  </div>\n\n</div>\n   \n  </div>\n   <div class=\"dashBoardMianContentCon\" [ngClass]=\"(displaySidenav) ? 'contentMiniWidth':'contentMaxWidth'\">\n    <router-outlet></router-outlet>\n   </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FirebaseService } from '../firebase.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { AddnewuserComponent } from '../addnewuser/addnewuser.component';\n@Component({\n  selector: 'app-employeesData',\n  templateUrl: './employeesData.component.html',\n  styleUrls: ['./employeesData.component.css']\n})\n\n\n\nexport class EmployeesDataComponent implements OnInit {\n\n\n  constructor(public firebaseService: FirebaseService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n\n  }\n\n  addNewUser() {\n    const dialogRef = this.dialog.open(AddnewuserComponent, {\n      width: '350px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result) {\n        this.firebaseService.addNewEmployee(result);\n      }\n\n    });\n  }\n\n\n}\n\n","<div class=\"employeesCon\" fxLayout=\"column\">\n\n  <div class=\"employeesHeader\" fxLayoutAlign=\"center center\">    \n    <mat-card fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <span>All Employees</span>\n    </mat-card>\n  </div>\n\n  <div class=\"addNewEmployeeButtonCon\" fxLayoutAlign=\"center center\">\n    <mat-card fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <button mat-mini-fab color=\"primary\" (click)=\"addNewUser()\" fxLayoutAlign=\"center center\"><i class=\"material-icons\">\n        add\n        </i></button>\n    </mat-card>\n  </div>\n\n  <div class=\"employeesTableCon\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <div>\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let user of firebaseService.currentUser?.employees; let ind = index\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{user.name}}\n          </mat-panel-title>\n          <mat-panel-description>\n            {{user.phoneNumber}}\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n\n        <div class=\"userBriefInfoCon\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <span >{{user.Name}}</span>\n          <span>{{user.phoneNumber}}</span>\n          <span>{{user.role}}</span>\n          <span>{{user.address}}</span>\n          <span>{{user.mail}}</span>\n        </div>\n\n      </mat-expansion-panel>\n\n      \n    </mat-accordion>\n    </div>\n\n    \n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n  allFirebaseusers: any = [];\n  currentUser: any;\n  constructor(public database: AngularFireDatabase, public firestore: AngularFirestore, public route: Router) {\n\n    const self = this;\n    window.addEventListener('storage', (event) => {\n      console.log('event called...');\n      if (event.storageArea === localStorage) {\n        console.log('localStorage called...');\n        const mail = localStorage.getItem('loginUserMailId');\n        if (mail === undefined || mail === null) {\n          console.log('logout called...');\n          self.route.navigate(['/login']);\n        } else {\n          console.log('dashboard called');\n          self.route.navigate(['/dashboard']);\n        }\n      }\n    }, false);\n\n  }\n\n\n  validateLoginUser(mailId, password) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      this.firestore.collection('/allUsers').doc(mailId).get().subscribe((res) => {\n        if (res && res.data()) {\n          if (password === res.data().password) {\n            self.currentUser = res.data();\n            resolve('success');\n          } else {\n            resolve('Invalid Password');\n          }\n        } else {\n          resolve('user is not registered');\n        }\n      });\n\n    });\n  }\n\n  registerNewUser(data) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      this.firestore.collection('/allUsers').doc(data.mail).get().subscribe((res) => {\n        if (res && res.data()) {\n          self.currentUser = res.data();\n          resolve('User Already Exists');\n\n        } else {\n          this.firestore.collection('allUsers').doc(data.mail).set(data);\n          self.currentUser = data;\n          resolve('success');\n        }\n      });\n    });\n\n  }\n\n  addNewEmployee(data) {\n    const self = this;\n    this.firestore.collection('/allUsers').doc(this.currentUser.mail).get().subscribe((res) => {\n      if (res && res.data()) {\n        const newUser = res.data();\n\n        if (newUser.employees) {\n          newUser.employees.push(data);\n        } else {\n          newUser.employees = [];\n          newUser.employees.push(data);\n        }\n\n        self.currentUser = newUser;\n        self.firestore.collection('/allUsers').doc(self.currentUser.mail).set(newUser);\n      }\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { FirebaseService } from '../firebase.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public displayLoginContainer = true;\n  constructor(public snackbar: MatSnackBar, public router: Router, public firebaseService: FirebaseService) { }\n\n  Login = new FormGroup({\n    email: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required])\n  });\n\n  Register = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    mobile: new FormControl('', [Validators.required]),\n    mail: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6),\n    Validators.maxLength(8)]),\n    cpassword: new FormControl('', [Validators.required, Validators.minLength(6),\n    Validators.maxLength(8)])\n  });\n\n  ngOnInit() {\n  }\n\n  validateUser() {\n    const self = this;\n    if (this.Login.valid) {\n      this.firebaseService.validateLoginUser(this.Login.value.email, this.Login.value.password).then((status) => {\n        if (status === 'success') {\n          localStorage.loginUserMailId = self.Login.value.email;\n          self.router.navigate(['/dashboard']);\n        } else {\n          self.openSnackBar(status);\n        }\n      });\n    }\n  }\n\n  validateRegister() {\n    const self = this;\n    if (this.Register.valid && this.Register.value.password !== this.Register.value.cpassword) {\n      this.openSnackBar('password & confirm password shoulb be same..');\n      return;\n    }\n\n    if (this.Register.valid) {\n     this.firebaseService.registerNewUser(this.Register.value).then( (status) => {\n      if (status === 'success' ) {\n        localStorage.loginUserMailId = self.Register.value.mail;\n        self.router.navigate(['/dashboard']);\n       } else {\n        self.openSnackBar(status);\n       }\n     });\n    }\n\n  }\n\n  openSnackBar(message) {\n    this.snackbar.open(message, '', {\n      duration: 2000,\n    });\n  }\n\n}\n","<div class=\"loginContainer\" fxLayoutAlign=\"center center\">\n\n  <div class=\"cardOuterCon fadeIn\" *ngIf=\"displayLoginContainer\">\n  <mat-card class=\"loginCardContainer\" fxLayout=\"column\" >\n    <mat-card-header fxFlex=\"15\" fxLayoutAlign=\"center center\">\n      <mat-card-title class=\"commonFontSize\">App Name</mat-card-title>\n    </mat-card-header>\n    <mat-card-content fxFlex=\"70\" class=\"loginFieldsContainer\">\n\n      <form [formGroup]=\"Login\" (ngSubmit)=\"validateUser()\" fxLayout=\"column\" class=\"loginFormContainer\">\n\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input matInput type=\"text\" formControlName=\"email\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-card-title fxLayoutAlign=\"center center\" class=\"commonFontSize LoginButton\"><button mat-raised-button>Login</button></mat-card-title>\n\n      </form>\n\n    </mat-card-content>\n    <mat-card-actions fxFlex=\"15\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <span class=\"registerButton\" (click)=\"displayLoginContainer = !displayLoginContainer\">Register</span>\n    </mat-card-actions>\n  </mat-card>\n</div>\n<div class=\"cardOuterCon fadeIn\"  *ngIf=\"!displayLoginContainer\">\n  <mat-card class=\"registerContainer fadeIn\" fxLayout=\"column\">\n    <mat-card-header fxFlex=\"10\" fxLayoutAlign=\"center center\">\n      <mat-card-title class=\"commonFontSize\">App Name</mat-card-title>\n    </mat-card-header>\n    <mat-card-content fxFlex=\"90\" class=\"registerFieldsContainer\">\n\n      <form [formGroup]=\"Register\" (ngSubmit)=\"validateRegister()\" fxLayout=\"column\" class=\"loginFormContainer\">\n\n        <mat-form-field>\n          <mat-label>* Name</mat-label>\n          <input matInput type=\"text\" formControlName=\"name\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>* Phone Number</mat-label>\n          <input matInput type=\"text\" formControlName=\"mobile\" autocomplete=\"off\" pattern=\"[5-9]{1}[0-9]{9}\">\n        </mat-form-field> \n\n        <mat-form-field>\n          <mat-label>* Email</mat-label>\n          <input matInput type=\"text\" formControlName=\"mail\" autocomplete=\"off\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>* Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"password\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>* Confirm Password</mat-label>\n          <input matInput type=\"password\" formControlName=\"cpassword\" autocomplete=\"off\">\n        </mat-form-field>\n\n        <mat-card-title fxLayoutAlign=\"center center\" class=\"commonFontSize LoginButton\"><button mat-raised-button>Register</button></mat-card-title>\n\n      </form>\n\n    </mat-card-content>\n\n    <mat-card-actions fxFlex=\"10\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <span class=\"registerButton\" (click)=\"displayLoginContainer = !displayLoginContainer\">Login</span>\n    </mat-card-actions>\n  </mat-card>\n</div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyBYm1qdVkGPAq34d7u2YziJgwy7g9FaPjE\",\n    authDomain: \"sridhar-calculations.firebaseapp.com\",\n    databaseURL: \"https://sridhar-calculations.firebaseio.com\",\n    projectId: \"sridhar-calculations\",\n    storageBucket: \"sridhar-calculations.appspot.com\",\n    messagingSenderId: \"79388774150\",\n    appId: \"1:79388774150:web:d2009b92d5d052c8f75887\",\n    measurementId: \"G-5BSZW52FEQ\"\n  }\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}